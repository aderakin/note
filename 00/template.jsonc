{
	"OI template": {
		"prefix": "oicp",
		"body": [
		//"// #pragma GCC optimize(\"O2,unroll-loops\")",
		//"// #pragma GCC target(\"avx2\")",
		//"",
		"#include <bits/stdc++.h>",
		"using namespace std;",
		"using ll = long long;",
		"using ld = long double;",
		"// #define int long long",
		"",
		"#define all(v) v.begin(), v.end()",
		"#define create_unique(vec) sort(all(vec)); vec.resize(unique(all(vec))-vec.begin());",
		"",
		"template<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }",
		"template<class T> bool ckmax(T& a, const T& b) { return b > a ? a = b, 1 : 0; }",
		"",
		"void setIO(string name = \"\"){",
		"\tios_base::sync_with_stdio(0);",
		"\tcin.tie(0);",
		"",
		"#define db(val) \"[\" #val \" = \" << (val) << \"] \"",
		"#ifdef LOCAL_DEBUG  ",
		"#   define clog cerr ",
		"#else",
		"#   define clog if (0) cerr",
		"#endif",
		"",
		"\tif (!name.empty()) {",
		"\t\tif (fopen((name + \".inp$2\").c_str(), \"r\")) { ",
		"\t\t\tfreopen((name + \".inp$2\").c_str(), \"r\", stdin);",
		"\t\t\tfreopen((name + \".out\").c_str(), \"w\", stdout);",
		"\t\t}",  
		"\t}",
		"",
		"}",
		"",
		"void solve() {",
		"",
		"}",
		"",
		"signed main() {",
		"\tsetIO(\"$1\");",
		"\tint t = 1;",
		"\t$0cin >> t;",
		"\twhile (t--) solve();",
		"}"
		],
		"description": "cp quick start"
	},

	"CF template": {
		"prefix": "cfcp",
		"body": [
		//"// #pragma GCC optimize(\"O2,unroll-loops\")",
		//"// #pragma GCC target(\"avx2\")",
		//"",
		"#include <bits/stdc++.h>",
		"using namespace std;",
		"using ll = long long;",
		"using ld = long double;",
		"// #define int long long",
		"",
		"#define all(v) v.begin(), v.end()",
		"#define create_unique(vec) sort(all(vec)); vec.resize(unique(all(vec))-vec.begin());",
		"",
		"#define db(val) \"[\" #val \" = \" << (val) << \"] \"",
		"#ifdef LOCAL_DEBUG  ",
		"#   define clog cerr ",
		"#else",
		"#   define clog if (0) cerr",
		"#endif",
		"",
		"template<class T> bool ckmin(T& a, const T& b) { return b < a ? a = b, 1 : 0; }",
		"template<class T> bool ckmax(T& a, const T& b) { return b > a ? a = b, 1 : 0; }",
		"",
		"void solve() {",
		"",
		"}",
		"",
		"signed main() {",
		"\tios_base::sync_with_stdio(0);",
		"\tcin.tie(0);",
		"\tint t = 1;",
		"\t$0cin >> t;",
		"\twhile (t--) solve();",
		"}"
		],
		"description": "cp quick start"
	},

	"for loop": {
		"prefix": "frr",
		"body": [
			"for ($type $index = 0; $index < $max; $index++) {",
			"\t$0",
			"}",
		],
	}

}